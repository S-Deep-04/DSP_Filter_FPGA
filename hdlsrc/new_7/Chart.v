// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\new_7\Chart.v
// Created: 2025-06-24 11:26:22
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Chart
// Source Path: new_7/main _module_new/Chart
// Hierarchy Level: 2
// Model version: 1.3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Chart
          (clk,
           reset_x,
           enb,
           en,
           length,
           we);

  // Default encoded enumeration values for type state_type_is_Chart
  parameter state_type_is_Chart_IN_nop = 2'd0, state_type_is_Chart_IN_nop2 = 2'd1, state_type_is_Chart_IN_read = 2'd2;

  input   clk;
  input   reset_x;
  input   enb;
  input   en;
  input   [7:0] length;  // uint8
  output  we;


  reg  we_1;
  reg [7:0] i1;  // uint8
  reg [1:0] is_Chart;  // uint8
  reg [7:0] i1_next;  // uint8
  reg [1:0] is_Chart_next;  // enum type state_type_is_Chart (3 enums)
  reg [8:0] add_temp;  // ufix9
  reg [8:0] add_temp_0;  // ufix9
  reg [8:0] t_0;  // ufix9
  reg [8:0] t_1;  // ufix9


  always @(posedge clk)
    begin : Chart_1_process
      if (reset_x == 1'b1) begin
        is_Chart <= state_type_is_Chart_IN_nop;
        i1 <= 8'd0;
      end
      else begin
        if (enb) begin
          i1 <= i1_next;
          is_Chart <= is_Chart_next;
        end
      end
    end

  always @(en, i1, is_Chart, length) begin
    add_temp = 9'b000000000;
    add_temp_0 = 9'b000000000;
    t_0 = 9'b000000000;
    t_1 = 9'b000000000;
    i1_next = i1;
    is_Chart_next = is_Chart;
    case ( is_Chart)
      state_type_is_Chart_IN_nop :
        begin
          we_1 = 1'b1;
          if ( ! en) begin
            is_Chart_next = state_type_is_Chart_IN_nop;
            we_1 = 1'b1;
            i1_next = 8'd0;
          end
          else if (en) begin
            is_Chart_next = state_type_is_Chart_IN_read;
            we_1 = 1'b0;
            t_0 = {1'b0, i1};
            add_temp_0 = t_0 + 9'b000000001;
            if (add_temp_0[8] != 1'b0) begin
              i1_next = 8'b11111111;
            end
            else begin
              i1_next = add_temp_0[7:0];
            end
          end
        end
      state_type_is_Chart_IN_nop2 :
        begin
          we_1 = 1'b1;
          if ( ! en) begin
            is_Chart_next = state_type_is_Chart_IN_nop;
            we_1 = 1'b1;
            i1_next = 8'd0;
          end
        end
      default :
        begin
          //case IN_read:
          we_1 = 1'b0;
          if (i1 < length) begin
            is_Chart_next = state_type_is_Chart_IN_read;
            we_1 = 1'b0;
            t_1 = {1'b0, i1};
            add_temp = t_1 + 9'b000000001;
            if (add_temp[8] != 1'b0) begin
              i1_next = 8'b11111111;
            end
            else begin
              i1_next = add_temp[7:0];
            end
          end
          else if (i1 == length) begin
            is_Chart_next = state_type_is_Chart_IN_nop2;
            we_1 = 1'b1;
          end
        end
    endcase
  end

  assign we = we_1;

endmodule  // Chart

