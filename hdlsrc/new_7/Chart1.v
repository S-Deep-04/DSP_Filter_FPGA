// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\new_7\Chart1.v
// Created: 2025-06-24 11:26:22
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Chart1
// Source Path: new_7/main _module_new/Chart1
// Hierarchy Level: 2
// Model version: 1.3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Chart1
          (clk,
           reset_x,
           enb,
           en,
           length,
           ready,
           we2);

  // Default encoded enumeration values for type state_type_is_Chart1
  parameter state_type_is_Chart1_IN_nop1 = 2'd0, state_type_is_Chart1_IN_nop21 = 2'd1, state_type_is_Chart1_IN_nop3 = 2'd2, state_type_is_Chart1_IN_write = 2'd3;

  input   clk;
  input   reset_x;
  input   enb;
  input   en;
  input   [7:0] length;  // uint8
  output  ready;
  output  we2;


  reg [7:0] i2;  // uint8
  reg [1:0] is_Chart1;  // uint8
  reg  ready_reg;
  reg  we2_reg;
  reg [7:0] i2_next;  // uint8
  reg [1:0] is_Chart1_next;  // enum type state_type_is_Chart1 (4 enums)
  reg  ready_reg_next;
  reg  we2_reg_next;
  reg [8:0] add_temp;  // ufix9
  reg [7:0] add_cast;  // uint8
  reg [8:0] add_cast_0;  // ufix9
  reg [8:0] add_temp_0;  // ufix9
  reg [7:0] sub_cast;  // uint8
  reg [8:0] add_temp_1;  // ufix9
  reg [7:0] add_cast_1;  // uint8
  reg [8:0] add_cast_2;  // ufix9
  reg [8:0] add_temp_2;  // ufix9
  reg [7:0] sub_cast_0;  // uint8
  reg [8:0] add_temp_3;  // ufix9
  reg [8:0] add_temp_4;  // ufix9
  reg [8:0] add_temp_5;  // ufix9
  reg [8:0] add_temp_6;  // ufix9
  reg [8:0] t_0;  // ufix9
  reg [8:0] t_1;  // ufix9
  reg [8:0] t_2;  // ufix9
  reg [8:0] t_3;  // ufix9
  reg [8:0] t_4;  // ufix9
  reg [8:0] t_5;  // ufix9


  always @(posedge clk)
    begin : Chart1_1_process
      if (reset_x == 1'b1) begin
        ready_reg <= 1'b0;
        is_Chart1 <= state_type_is_Chart1_IN_nop1;
        we2_reg <= 1'b0;
        i2 <= 8'd0;
      end
      else begin
        if (enb) begin
          i2 <= i2_next;
          is_Chart1 <= is_Chart1_next;
          ready_reg <= ready_reg_next;
          we2_reg <= we2_reg_next;
        end
      end
    end

  always @(en, i2, is_Chart1, length, ready_reg) begin
    add_temp = 9'b000000000;
    add_temp_0 = 9'b000000000;
    add_temp_1 = 9'b000000000;
    add_temp_2 = 9'b000000000;
    add_temp_3 = 9'b000000000;
    add_temp_4 = 9'b000000000;
    add_temp_5 = 9'b000000000;
    add_temp_6 = 9'b000000000;
    t_0 = 9'b000000000;
    t_1 = 9'b000000000;
    t_2 = 9'b000000000;
    t_3 = 9'b000000000;
    add_cast = 8'd0;
    add_cast_0 = 9'b000000000;
    sub_cast = 8'd0;
    t_4 = 9'b000000000;
    t_5 = 9'b000000000;
    add_cast_1 = 8'd0;
    add_cast_2 = 9'b000000000;
    sub_cast_0 = 8'd0;
    ready_reg_next = ready_reg;
    i2_next = i2;
    is_Chart1_next = is_Chart1;
    case ( is_Chart1)
      state_type_is_Chart1_IN_nop1 :
        begin
          we2_reg_next = 1'b0;
          if ( ! en) begin
            is_Chart1_next = state_type_is_Chart1_IN_nop1;
            we2_reg_next = 1'b0;
            i2_next = 8'd0;
          end
          else if (en) begin
            is_Chart1_next = state_type_is_Chart1_IN_nop21;
            we2_reg_next = 1'b0;
            t_2 = {1'b0, i2};
            add_temp_5 = t_2 + 9'b000000001;
            if (add_temp_5[8] != 1'b0) begin
              i2_next = 8'b11111111;
            end
            else begin
              i2_next = add_temp_5[7:0];
            end
          end
        end
      state_type_is_Chart1_IN_nop21 :
        begin
          we2_reg_next = 1'b0;
          if (i2 == 8'b00000100) begin
            is_Chart1_next = state_type_is_Chart1_IN_write;
            we2_reg_next = 1'b1;
            t_0 = {1'b0, i2};
            add_temp_3 = t_0 + 9'b000000001;
            if (add_temp_3[8] != 1'b0) begin
              i2_next = 8'b11111111;
            end
            else begin
              i2_next = add_temp_3[7:0];
            end
          end
          else if (i2 < 8'b00000100) begin
            is_Chart1_next = state_type_is_Chart1_IN_nop21;
            we2_reg_next = 1'b0;
            t_1 = {1'b0, i2};
            add_temp_6 = t_1 + 9'b000000001;
            if (add_temp_6[8] != 1'b0) begin
              i2_next = 8'b11111111;
            end
            else begin
              i2_next = add_temp_6[7:0];
            end
          end
        end
      state_type_is_Chart1_IN_nop3 :
        begin
          we2_reg_next = 1'b0;
          ready_reg_next = 1'b1;
          if ( ! en) begin
            is_Chart1_next = state_type_is_Chart1_IN_nop1;
            we2_reg_next = 1'b0;
            i2_next = 8'd0;
          end
        end
      default :
        begin
          //case IN_write:
          we2_reg_next = 1'b1;
          t_3 = {1'b0, length};
          add_temp = t_3 + 9'b000000100;
          if (add_temp[8] != 1'b0) begin
            add_cast = 8'b11111111;
          end
          else begin
            add_cast = add_temp[7:0];
          end
          add_cast_0 = {1'b0, add_cast};
          add_temp_0 = add_cast_0 + 9'b000001100;
          if (add_temp_0[8] != 1'b0) begin
            sub_cast = 8'b11111111;
          end
          else begin
            sub_cast = add_temp_0[7:0];
          end
          if (i2 < (sub_cast - 8'b00000001)) begin
            is_Chart1_next = state_type_is_Chart1_IN_write;
            we2_reg_next = 1'b1;
            t_4 = {1'b0, i2};
            add_temp_4 = t_4 + 9'b000000001;
            if (add_temp_4[8] != 1'b0) begin
              i2_next = 8'b11111111;
            end
            else begin
              i2_next = add_temp_4[7:0];
            end
          end
          else begin
            t_5 = {1'b0, length};
            add_temp_1 = t_5 + 9'b000000100;
            if (add_temp_1[8] != 1'b0) begin
              add_cast_1 = 8'b11111111;
            end
            else begin
              add_cast_1 = add_temp_1[7:0];
            end
            add_cast_2 = {1'b0, add_cast_1};
            add_temp_2 = add_cast_2 + 9'b000001100;
            if (add_temp_2[8] != 1'b0) begin
              sub_cast_0 = 8'b11111111;
            end
            else begin
              sub_cast_0 = add_temp_2[7:0];
            end
            if (i2 == (sub_cast_0 - 8'b00000001)) begin
              is_Chart1_next = state_type_is_Chart1_IN_nop3;
              we2_reg_next = 1'b0;
              ready_reg_next = 1'b1;
            end
          end
        end
    endcase
  end

  assign ready = ready_reg_next;
  assign we2 = we2_reg_next;

endmodule  // Chart1

