// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\new_7\SinglePortRAM_generic.v
// Created: 2025-06-24 11:26:22
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SinglePortRAM_generic
// Source Path: new_7/main _module_new/SinglePortRAM_generic
// Hierarchy Level: 2
// Model version: 1.3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SinglePortRAM_generic
          (clk,
           enb,
           din_re,
           din_im,
           addr,
           we,
           dout_re,
           dout_im);

  parameter integer AddrWidth  = 1;
  parameter integer DataWidth  = 1;

  input   clk;
  input   enb;
  input   signed [DataWidth - 1:0] din_re;  // parameterized width
  input   signed [DataWidth - 1:0] din_im;  // parameterized width
  input   [AddrWidth - 1:0] addr;  // parameterized width
  input   we;  // ufix1
  output  signed [DataWidth - 1:0] dout_re;  // parameterized width
  output  signed [DataWidth - 1:0] dout_im;  // parameterized width


  reg  [DataWidth*2 - 1:0] ram [2**AddrWidth - 1:0];
  reg  [DataWidth*2 - 1:0] data_int;
  integer i;

  initial begin
    for (i=0; i<=2**AddrWidth - 1; i=i+1) begin
      ram[i] = 0;
    end
    data_int = 0;
  end


  always @(posedge clk)
    begin : SinglePortRAM_generic_process
      if (enb == 1'b1) begin
        if (we == 1'b1) begin
          ram[addr] <= {din_re, din_im};
          data_int <= {din_re, din_im};
        end
        else begin
          data_int <= ram[addr];
        end
      end
    end

  assign dout_re = data_int[DataWidth*2-1:DataWidth];
  assign dout_im = data_int[DataWidth-1:0];

endmodule  // SinglePortRAM_generic

